{"version":3,"sources":["components/Avatar.js","components/group/ChoiceGroupItem.js","components/button/MainButton.js","defaults.js","controller/actionTypes.js","controller/commonReducer.js","controller/index.js","containers/ChoiceGroup.js","components/SpeedControl.js","components/Timer.js","components/Header.js","containers/MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["Avatar","_ref","avatar","size","style","backgroundImage","concat","height","width","react_default","a","createElement","className","ChoiceGroupItem","group","onClick","current","borderColor","name","src_components_Avatar","MainButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_btn","React","createRef","bind","assertThisInitialized","e","title","ref","Component","defaults","groups","id","members","bio","health","moral","salary","actionTypes","initialState","groupIndex","dt","Date","speed","setGroup","index","type","AT","setSpeed","startGame","store","createStore","state","arguments","length","undefined","action","objectSpread","defs","GROUPS","ChoiceGroup","_this$props","setGroupIndex","map","i","components_group_ChoiceGroupItem","key","components_button_MainButton","connect","dispatch","CircleButton","content","active","SpeedControl","SpeedControl_CircleButton","Timer","src_components_SpeedControl","Header","rating","_stars","push","stars","src_components_Timer","MainScreen","src_components_Header","App","containers_MainScreen","src_containers_ChoiceGroup","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c7596da.chunk.js","sourcesContent":["import React from 'react';\nimport './Avatar.scss';\n\nconst Avatar = ({ avatar, size }) => {\n    const style = {\n        backgroundImage: `url(${avatar})`,\n        height: size,\n        width: '100%'\n    };\n    return (\n        <div className=\"avatar\" style={style}/>\n    )\n};\n\nexport default Avatar;\n","import React from 'react';\nimport './ChoiceGroupItem.scss';\nimport Avatar from '../Avatar';\n\n\nconst ChoiceGroupItem = ({ group, onClick, current }) => {\n    const style = !current ? {} : {\n        'borderColor': 'rgba(216, 0, 0, 1)'\n    };\n    return (\n        <div className=\"choice_group_item\" onClick={onClick} style={style}>\n            <div className=\"choice_group_item_info\">\n                {group.name}\n            </div>\n            <Avatar avatar={group.avatar} size={'16em'}/>\n        </div>\n    )\n};\n\nexport default ChoiceGroupItem;\n","import React, { Component } from 'react';\nimport './MainButton.scss';\n\nclass MainButton extends Component {\n    constructor(props) {\n        super(props);\n        this._btn = React.createRef();\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e) {\n        const { onClick } = this.props;\n        if (onClick) {onClick(e)}\n\n    }\n\n    render() {\n        const { title } = this.props;\n        return (\n            <div ref={this._btn} onClick={this.onClick} className=\"main_button\">\n                <div>\n                    <span>{title}</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainButton;\n","export default {\n    groups: [\n        {\n            id: 1,\n            name: \"Black Tomato's\",\n            avatar: \"/assets/images/group_1.svg\",\n            members: [\n                {\n                    id: 1,\n                    name: \"Ivan Ivanov\",\n                    bio: \"Crazy guy\",\n                    avatar: \"/assets/images/members/member_1.svg\",\n                    health: 70,\n                    moral: 90,\n                    salary: 10000\n                }\n            ]\n        },\n        {   id: 2,\n            name: \"Мохнатый шмель\",\n            avatar: \"/assets/images/group_1.svg\",\n\n        },\n    ]\n}","export default {\n    setGroup: 'setGroup',\n    startGame: 'startGame',\n    setSpeed: 'setSpeed',\n}","import defs from '../defaults';\nimport AT from './actionTypes';\n\nconst initialState = {\n    groupIndex: null,\n    group: null,\n    dt: new Date(2018, 1, 1, 12, 0, 0),\n    speed: 0\n};\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n        case AT.setGroup:\n            return {\n                ...state,\n                groupIndex: action.index\n            };\n        case AT.setSpeed:\n            return {\n                ...state,\n                speed: action.speed\n            };\n        case AT.startGame:\n            return {\n                ...state,\n                group: defs.groups[state.groupIndex - 1]\n            };\n        default:\n            return state\n    }\n}","import { createStore, combineReducers } from 'redux';\nimport commonReducer from './commonReducer';\nimport AT from './actionTypes';\n\nconst setGroup = (index) => {\n    return {\n        type: AT.setGroup,\n        index: index\n    }\n};\n\nconst setSpeed = (speed) => {\n    return {\n        type: AT.setSpeed,\n        speed: speed\n    }\n};\n\nconst startGame = () => {\n    return {\n        type: AT.startGame,\n    }\n};\n\nconst store = createStore(commonReducer);\n\nexport {\n    setGroup,\n    startGame,\n    setSpeed,\n    store\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ChoiceGroupItem from '../components/group/ChoiceGroupItem';\nimport MainButton from '../components/button/MainButton';\nimport defaults from '../defaults'\nimport { setGroup, startGame } from \"../controller\";\nimport './ChoiceGroup.scss'\n\nconst GROUPS = defaults.groups;\n\nclass ChoiceGroup extends Component {\n\n    render() {\n        const { groupIndex, setGroupIndex, startGame } = this.props;\n        return (\n            <div className=\"choice_group_container\">\n                <div>\n                    <h1>Выберите группу</h1>\n                    <div className=\"choice_group_items\">\n                        {\n                            GROUPS.map((i) => <ChoiceGroupItem group={i}\n                                                               current={i.id === groupIndex}\n                                                               onClick={() => setGroupIndex(i.id)}\n                                                               key={`group-choice-${i.id}`}/>)\n                        }\n                    </div>\n                </div>\n                <MainButton title=\"START\" onClick={startGame}/>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        groupIndex: state.groupIndex\n    };\n}\n\nfunction mapStateToDispatch(dispatch) {\n    return {\n        setGroupIndex: (i) => dispatch(setGroup(i)),\n        startGame: () => dispatch(startGame())\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapStateToDispatch\n)(ChoiceGroup);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './SpeedControl.scss';\nimport { setSpeed } from \"../controller\";\n\n\nconst CircleButton = ({ content, active, onClick }) => {\n    const className = active ? 'circle_button_active'  : 'circle_button';\n    if (active) {\n        return <div className={className}>{content}</div>\n    } else {\n        return <div className={className} onClick={onClick}>{content}</div>\n    }\n};\n\nclass SpeedControl extends Component {\n    render() {\n        const { speed, setSpeed } = this.props;\n        return (\n            <div className=\"speed_control\">\n                <CircleButton content=\"P\" active={speed === 0} onClick={() => setSpeed(0)}/>\n                <CircleButton content=\"x1\" active={speed === 1} onClick={() => setSpeed(1)}/>\n                <CircleButton content=\"x2\" active={speed === 2} onClick={() => setSpeed(2)}/>\n                <CircleButton content=\"x3\" active={speed === 3} onClick={() => setSpeed(3)}/>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        speed: state.speed\n    };\n}\n\nfunction mapStateToDispatch(dispatch) {\n    return {\n        setSpeed: (i) => dispatch(setSpeed(i)),\n    };\n}\n\nexport default connect(mapStateToProps, mapStateToDispatch)(SpeedControl);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './Timer.scss';\nimport SpeedControl from \"./SpeedControl\";\n\nclass Timer extends Component {\n    render() {\n        const { dt } = this.props;\n        const dateString = \"01-01-2018\";\n        const timeString = \"12:00\";\n        return (\n            <div>\n                <div className=\"timer\">\n                    <div className=\"timer_date\">\n                        <span>{dateString}</span>\n                    </div>\n                    <div className=\"timer_time\">\n                        <span>{timeString}</span>\n                    </div>\n                </div>\n                <SpeedControl/>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        dt: state.dt\n    };\n}\n\nexport default connect(mapStateToProps, null)(Timer);","import React, { Component } from 'react';\nimport Timer from './Timer';\nimport './Header.scss';\n\nconst rating = 3;\n\nconst stars = (rating) => {\n    const _stars = [];\n    for (var i=1; i <= rating; i++) {\n        _stars.push(<span className=\"fill\" key={`start-${i}`}>☆</span>)\n    }\n    for (;i <=5; i++) {\n        _stars.push(<span key={`start-${i}`}>☆</span>)\n    }\n    return _stars\n};\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"main_header\">\n                <div className=\"main_header_left\">\n                    <div className=\"rating\">\n                        {stars(rating)}\n                    </div>\n                    <Timer/>\n                </div>\n                <div className=\"money\">\n                    &#8381; {10000}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Header from \"../components/Header\";\n\n\nclass MainScreen extends Component {\n    render() {\n        return (\n            <div>\n                <Header/>\n            </div>\n        )\n    }\n}\n\nexport default MainScreen;","import React, { Component } from 'react';\nimport ChoiceGroup from './containers/ChoiceGroup';\nimport MainScreen from './containers/MainScreen';\nimport { connect } from \"react-redux\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const { group } = this.props;\n    return (\n      <div className=\"App\">\n          {group ? <MainScreen/> : <ChoiceGroup/>}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        group: state.group\n    };\n}\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from \"./controller\";\n\nReactDOM.render(\n    <Provider store={store}><App /></Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}